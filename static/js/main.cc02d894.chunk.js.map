{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Field/Field.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Field","filterBy","query","htmlFor","type","id","placeholder","value","onChange","event","target","App","useState","setQuery","visibleMovies","preparedMovies","part","trim","toLowerCase","filter","movieTitle","movieDescription","includes","getPreparedMovies","moviesFromServer","newQuery","ReactDOM","render","document","getElementById"],"mappings":"4SAEaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,4BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,cCNfC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACnB,sBAAKd,UAAU,QAAf,UACE,uBAAOe,QAAQ,eAAef,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEgB,KAAK,OACLC,GAAG,eACHjB,UAAU,QACVkB,YAAY,mBACZC,MAAOL,EACPM,SAAU,SAACC,GACTR,EAASQ,EAAMC,OAAOH,gBCUzB,IAAMI,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACMC,EAnBR,SAA2BjB,EAA3B,GAA+C,IAAVK,EAAS,EAATA,MAC7Ba,EAAc,YAAOlB,GAE3B,GAAIK,EAAO,CACT,IAAMc,EAAOd,EAAMe,OAAOC,cAE1B,OAAOH,EAAeI,QAAO,SAAChC,GAC5B,IAAMiC,EAAajC,EAAMK,MAAM0B,cACzBG,EAAmBlC,EAAMM,YAAYyB,cAE3C,OAAQE,EAAWE,SAASN,IAASK,EAAiBC,SAASN,MAInE,OAAOD,EAKeQ,CAAkBC,EAAkB,CAAEtB,UAE5D,OACE,sBAAKd,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACEc,MAAOA,EACPD,SAAU,SAACwB,GACTZ,EAASY,QAKf,cAAC,EAAD,CACE5B,OAAQiB,OAIZ,qBAAK1B,UAAU,UAAf,mCCzCNsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.cc02d894.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","export const Field = ({ filterBy, query }) => (\n  <div className=\"field\">\n    <label htmlFor=\"search-query\" className=\"label\">\n      Search movie\n    </label>\n\n    <div className=\"control\">\n      <input\n        type=\"text\"\n        id=\"search-query\"\n        className=\"input\"\n        placeholder=\"Type search word\"\n        value={query}\n        onChange={(event) => {\n          filterBy(event.target.value);\n        }}\n      />\n    </div>\n  </div>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport moviesFromServer from './api/movies.json';\nimport { MoviesList } from './components/MoviesList';\nimport { Field } from './components/Field/Field';\n\nfunction getPreparedMovies(movies, { query }) {\n  const preparedMovies = [...movies];\n\n  if (query) {\n    const part = query.trim().toLowerCase();\n\n    return preparedMovies.filter((movie) => {\n      const movieTitle = movie.title.toLowerCase();\n      const movieDescription = movie.description.toLowerCase();\n\n      return (movieTitle.includes(part) || movieDescription.includes(part));\n    });\n  }\n\n  return preparedMovies;\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const visibleMovies = getPreparedMovies(moviesFromServer, { query });\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <Field\n            query={query}\n            filterBy={(newQuery) => {\n              setQuery(newQuery);\n            }}\n          />\n        </div>\n\n        <MoviesList\n          movies={visibleMovies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}